version: "3.9"

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 20

  app:
    build:
      context: ./app
    environment:
      - REDIS_ADDR=redis:latest
      - REDIS_DB=0
      - PORT=8080
      - ROLE=web
    depends_on:
      redis:
        condition: service_healthy
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8080"

  worker:
    build:
      context: ./app
    environment:
      - REDIS_ADDR=redis:latest
      - REDIS_DB=0
      - ROLE=worker
    depends_on:
      redis:
        condition: service_healthy

  traefik:
    image: traefik:latest
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
    ports:
      - "8080:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - app
